/*******************************************************************************
* JMMC project
*
* "@(#) $Id: modc.doc,v 1.5 2004-08-05 12:22:22 gluck Exp $"
*
* who       when         what
* --------  -----------  -------------------------------------------------------
* gluck     15-Jun-2004  Created
*
*
* IMPORTANT :
* This file contains the GENERAL MODULE DOCUMENTATION, preferably including an
* example for use of the main functions of this module. To make your own
* documentation, you have to substitute the general or example comments, with
* your specific comments.
*
* IMPORTANT:
* To make AUTOMATIC DOCUMENTATION GENERATION by doxygen, you have to insert
* your code documentation (about file, functions, define, enumeration, ...) as
* shown below, in the special documentation blocks (beginning with 1 slash and
* 2 stars), adding or deleting markers as needed.
* Nevertheless, you also have to comment the code as usually.  For more
* informations, you can report to Programming Standards (JRA4-PRO-2000-0001),
* or doxygen documentation.
*
* REMARKS
* The documentation below, shows some possibilities of doxygen. The general
* format of this documentation is recommended to make the documentation
* easily. Some documentation lines are strongly recommended to get rapidly a
* quite good documentation. Some others are optinonal, depending on the need.
* They will be pointed out with the word OPTIONAL.
*
*******************************************************************************/

/**
\mainpage modc : c module example

\bdesc
Brief module description. There could be one or more sentences in this short
module description.

\ddesc
Detailed module description.

\usedfiles
OPTIONAL. If files are used, for each one, name, and usage description, as
below. 
\filename filename 1 :  usage description of fileName1
\filename filename 2 :  usage description of fileName2

\n
\env
OPTIONAL. If needed, environmental variables accessed by the program. For each
variable, name, and usage description, as below.
\envvar envVar1 :  usage description of envVar1
\envvar envVar2 :  usage description of envVar2

\n
\ex
OPTIONAL but STRONGLY RECOMMENDED. Code examples if needed. You can make an
example list with the \\li marker.
\n Brief example description.
\code
Insert code for example
\endcode

\sa OPTIONAL. See also section in which you can refer other documented entities.
Using the \\sa marker, doxygen will create the link automatically.
An example is given below.
\sa files : modcMain.c, modc.h
\sa functions : modcProc1, modcProc2

\bug OPTIONAL. Known bugs list if it exists.
\bug Bug 1 : bug 1 description
\bug Bug 2 : bug 2 description

\todo OPTIONAL. Things to forsee list, if needed.
\todo Action 1 : action 1 description
\todo Action 2 : action 2 description
\n

*/
