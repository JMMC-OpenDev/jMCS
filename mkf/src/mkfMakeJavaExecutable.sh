#! /bin/ksh
#*******************************************************************************
# JMMC project
#
# "@(#) $Id: mkfMakeJavaExecutable.sh,v 1.1 2004-09-10 13:40:57 gzins Exp $" 
#
# who       when         what
# --------  --------     ----------------------------------------------
# gzins     26-Aug-2004  Adapted from VLT
#

#************************************************************************
#   NAME
#   mkfMakeJavaExecutable - create the java program 
# 
#   SYNOPSIS
#   mkfMakeJavaExecutable <javaName> <class>
# 
#   DESCRIPTION
#   Utility used by mkfMakefile to create a Java program. The generated
#   program sets the class path, using the mkfMakeJavaClasspath, before
#   launching the Java application.
#   It is not intended to be used as a standalone command.
#
#   <javaName>     The name of the java program. The output is named
#                  ../bin/<javaName>
#   <class>        The name of the class to be invoked.
#   <args>         The list of args to be given when lauching Java application  
#
#   FILES
#   $MCSROOT/include/mkfMakefile   
#
#   ENVIRONMENT
#
#   RETURN VALUES
#
#   SEE ALSO 
#   mkfMakefile, Makefile, (GNU) make
#
#   BUGS    
#
#----------------------------------------------------------------------

javaName=$1
class=$2
destDir=../bin/

echo "#!/bin/bash" > ${javaName} 
echo "# Java program file: ${javaName}" >> ${javaName}
echo "# Created automatically by mkfMakeJavaExecutable -  `date '+%d.%m.%y %T'`" >> ${javaName}
echo "# DO NOT EDIT THIS FILE" >> ${javaName}
echo "" >> ${javaName}
echo "# Generate the class path for Java" >> ${javaName}
echo "CLASSPATH=\`mkfMakeJavaClasspath\`" >> ${javaName}
echo "java -classpath \$CLASSPATH ${class} \$*">> ${javaName}
chmod +x ${javaName}

# ___oOo___
